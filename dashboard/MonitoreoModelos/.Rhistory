where distance = '%s'",
input$distMon)) %>%
mutate(flight_number = input$vuelo) %>%
select(flight_number, distance, observado, prediccion,
s3_name)
kk <-  dbGetQuery(con2,sprintf("select distance,
flight_number,
prediction as prediccion,
s3_name
from predictions.test
where distance = '%s'
and flight_number = '%s'",
input$distMon,
input$vuelo)) %>%
mutate(observado = NA) %>%
select(flight_number, distance, observado, prediccion,
s3_name)
runApp()
runApp()
runApp()
runApp()
tt <- dbGetQuery(con2,"select distance, count(*) as conteo
from predictions.train
group by distance")
kk <- dbGetQuery(con2,"select distance, count(*) as conteo
from predictions.test
group by distance")
kk
tt
res <- tt %>%
rbind(kk) %>%
group_by(fuente) %>%
mutate(porcentaje = conteo/sum(conteo)) %>%
ungroup
tt <- dbGetQuery(con2,"select distance, count(*) as conteo
from predictions.train
group by distance") %>%
mutate(fuente = 'TRAIN')
kk <- dbGetQuery(con2,"select distance, count(*) as conteo
from predictions.test
group by distance")   %>%
mutate(fuente = 'TEST')
res <- tt %>%
rbind(kk) %>%
group_by(fuente) %>%
mutate(porcentaje = conteo/sum(conteo)) %>%
ungroup
res
res <- tt %>%
rbind(kk) %>%
group_by(fuente) %>%
mutate(porcentaje = conteo/sum(conteo)) %>%
ungroup %>%
mutate(distance = paste0(distance,' Km'))
res
res <- tt %>%
rbind(kk) %>%
mutate_if(bit64::is.integer64,as.integer) %>%
group_by(fuente) %>%
mutate(porcentaje = conteo/sum(conteo)) %>%
ungroup %>%
mutate(distance = paste0(distance,' Km'))
cbb.s <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7",
"#8DD3C7","#FFFFB3","#BEBADA","#FB8072","#80B1D3","#FDB462","#B3DE69","#FCCDE5",
"#D9D9D9","#BC80BD","#CCEBC5","#A6CEE3","#1F78B4","#B2DF8A","#33A02C","#FB9A99","#E31A1C",
"#FDBF6F","#FF7F00","#CAB2D6","#6A3D9A","#FFFF99","#1B9E77","#D95F02","#7570B3","#E7298A",
"#66A61E","#E6AB02","#A6761D","#666666","#7FC97F","#BEAED4","#FDC086","#386CB0",
"#F0027F","#BF5B17","#66C2A5","#FC8D62","#8DA0CB","#E78AC3","#A6D854","#FFD92F","#E5C494","#B3B3B3")
dist_react
gr <- res %>% #dist_react %>%
mutate(forma_operar = ifelse(porcentaje >= 2, forma_operar, "OTRAS")) %>%
group_by(forma_operar) %>%
summarise(porcentaje = sum(porcentaje),
transacciones = sum(transacciones)) %>%
ungroup()
res
res <- tt %>%
rbind(kk) %>%
mutate_if(bit64::is.integer64,as.integer) %>%
group_by(fuente) %>%
mutate(porcentaje = 100*conteo/sum(conteo)) %>%
ungroup %>%
mutate(distance = paste0(distance,' Km'))
gr <- res %>% #dist_react() %>%
filter(fuente == 'TRAIN') %>%
mutate(distance = ifelse(porcentaje >= 2, distance, "OTRAS")) %>%
group_by(distance) %>%
summarise(porcentaje = sum(porcentaje),
conteo = sum(conteo)) %>%
ungroup()
gr
gr <- res %>% #dist_react() %>%
filter(fuente == 'TRAIN') %>%
mutate(distance = ifelse(porcentaje >= 3, distance, "OTRAS")) %>%
group_by(distance) %>%
summarise(porcentaje = sum(porcentaje),
conteo = sum(conteo)) %>%
ungroup()
gr
gr <- res %>% #dist_react() %>%
filter(fuente == 'TRAIN') %>%
mutate(distance = ifelse(porcentaje >= 4, distance, "OTRAS")) %>%
group_by(distance) %>%
summarise(porcentaje = sum(porcentaje),
conteo = sum(conteo)) %>%
ungroup()
gr
gr %>%
e_charts(distance) %>%
e_pie(porcentaje, radius = c("50%", "70%")) %>%
e_labels(formatter= c("{b}: {d}%")) %>%
e_tooltip(trigger = "item") %>%
e_legend(type="scroll",bottom='bottom') %>%
e_theme("macarons")
gr <- res %>% #dist_react() %>%
filter(fuente == 'TRAIN') %>%
mutate(distance = ifelse(porcentaje >= 5, distance, "OTRAS")) %>%
group_by(distance) %>%
summarise(porcentaje = sum(porcentaje),
conteo = sum(conteo)) %>%
ungroup()
gr %>%
e_charts(distancia) %>%
e_pie(porcentaje, radius = c("50%", "70%")) %>%
e_labels(formatter= c("{b}: {d}%")) %>%
e_tooltip(trigger = "item") %>%
e_legend(type="scroll",bottom='bottom') %>%
e_theme("macarons") %>%
e_title('Distribuci贸n de distancias',
"Datos de Prueba")
gr %>%
e_charts(distance) %>%
e_pie(porcentaje, radius = c("50%", "70%")) %>%
e_labels(formatter= c("{b}: {d}%")) %>%
e_tooltip(trigger = "item") %>%
e_legend(type="scroll",bottom='bottom') %>%
e_theme("macarons") %>%
e_title('Distribuci贸n de distancias',
"Datos de Prueba")
gr <- res %>% #dist_react() %>%
filter(fuente == 'TEST') %>%
mutate(distance = ifelse(porcentaje >= 4, distance, "OTRAS")) %>%
group_by(distance) %>%
summarise(porcentaje = sum(porcentaje),
conteo = sum(conteo)) %>%
ungroup()
gr %>%
e_charts(distance) %>%
e_pie(porcentaje, radius = c("50%", "70%")) %>%
e_labels(formatter= c("{b}: {d}%")) %>%
e_tooltip(trigger = "item") %>%
e_legend(type="scroll",bottom='bottom') %>%
e_theme("macarons") %>%
e_title('Distribuci贸n de distancias',
"Datos de Prueba")
gr <- res %>% #dist_react() %>%
filter(fuente == 'TRAIN') %>%
mutate(distance = ifelse(porcentaje >= 4, distance, "OTRAS")) %>%
group_by(distance) %>%
summarise(porcentaje = sum(porcentaje),
conteo = sum(conteo)) %>%
ungroup()
gr %>%
e_charts(distance) %>%
e_pie(porcentaje, radius = c("50%", "70%")) %>%
e_labels(formatter= c("{b}: {d}%")) %>%
e_tooltip(trigger = "item") %>%
e_legend(type="scroll",bottom='bottom') %>%
e_theme("macarons") %>%
e_title('Distribuci贸n de distancias',
"Datos de Entrenamiento")
runApp()
runApp()
runApp()
runApp()
runApp()
View(tablas)
ll <- dbGetQuery(con2,"select * from metadatos.bias")
ll <- dbGetQuery(con2,"select * from metadatos.bias")
ll %>% as_tibble
ll %>%
as_tibble %>%
gather(var,atributo,contains('attribute'))
ll %>%
as_tibble %>%
gather(var,atributo,contains('attribute')) %>%
select(var,atributo)
ll %>%
as_tibble %>%
gather(var,atributo,contains('attribute')) %>%
select(-var) %>%
gather(var,fpr,contains('fpr_disparity')) %>%
select(-var)
runApp()
kk
kk <- bias_react()
ll <- dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
gather(var,atributo,contains('attribute')) %>%
select(-var) %>%
gather(var,fpr,contains('fpr_disparity')) %>%
select(-var)
kk <- ll
kk
kk %>%
e_charts(attribute) %>%
e_bar(fpr, name = 'FPR Disparity') %>%
e_tooltip()
kk %>%
e_charts(atributo) %>%
e_bar(fpr, name = 'FPR Disparity') %>%
e_tooltip()
kk %>%
e_charts(atributo) %>%
e_bar(fpr, name = 'FPR Disparity') %>%
e_flip_coords() %>%
e_tooltip()
runApp()
ll <- dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
gather(var,atributo,contains('attribute')) %>%
select(-var) %>%
gather(var,fpr,contains('fpr_disparity')) %>%
select(-var) %>%
mutate(colores = cbb.s[1:nrow(.)])
ll <- dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
gather(var,atributo,contains('attribute')) %>%
select(-var) %>%
gather(var,fpr,contains('fpr_disparity')) %>%
select(-var) %>%
mutate(colores = cbb.s[1:nrow(.)])
kk <- ll
kk
kk %>%
e_charts(atributo) %>%
e_bar(fpr, name = 'FPR Disparity',
color = colores) %>%
e_flip_coords() %>%
e_tooltip()
kk %>%
e_charts(atributo) %>%
e_bar(fpr, name = 'FPR Disparity',
color = kk$colores) %>%
e_flip_coords() %>%
e_tooltip()
kk %>%
e_charts(atributo) %>%
e_bar(fpr, name = 'FPR Disparity') %>%
e_flip_coords() %>%
e_tooltip()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dbGetQuery(con2,sprintf("select distance,
flight_number,
prediction as prediccion,
s3_name
from predictions.test
where distance = '%s'
and flight_number = '%s'",
input$distMon,
input$vuelo))
dbGetQuery(con2,sprintf("select *
from predictions.test
where distance = '%s'
and flight_number = '%s'",
input$distMon,
input$vuelo)) %>% View
dbGetQuery(con2,sprintf("select *
from predictions.test
where distance = '%s'
and flight_number = '%s'",
input$distMon,
input$vuelo))
dbGetQuery(con2,sprintf("select *
from predictions.test
where distance = '%s'
and flight_number = '%s'",
input$distMon,
input$vuelo)) %>% .$fecha
res <- tt %>%
rbind(kk) %>%
as_tibble%>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia)),
ruido = runif(nrow(.),-0.25,.25),
ef = abs(as.numeric(prediccion)-observado),
ef = ifelse(ef==0,NA,ef),
prediccion = as.numeric(prediccion),
observado = observado) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente(.)) %>%
bind_rows()
tt <- dbGetQuery(con2,sprintf("select distance,
label_value as observado,
score as prediccion,
fecha
from predictions.train
where distance = '%s'",
input$distMon)) %>%
mutate(flight_number = input$vuelo) %>%
select(flight_number, distance, observado, prediccion,
fecha)
kk <-  dbGetQuery(con2,sprintf("select distance,
flight_number,
prediction as prediccion,
fecha
from predictions.test
where distance = '%s'
and flight_number = '%s'",
input$distMon,
input$vuelo)) %>%
mutate(observado = NA) %>%
select(flight_number, distance, observado, prediccion,
fecha)
res <- tt %>%
rbind(kk) %>%
as_tibble%>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia)),
ruido = runif(nrow(.),-0.25,.25),
ef = abs(as.numeric(prediccion)-observado),
ef = ifelse(ef==0,NA,ef),
prediccion = as.numeric(prediccion),
observado = observado) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente(.)) %>%
bind_rows()
res
res <- tt %>%
rbind(kk) %>%
as_tibble%>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia)),
ruido = runif(nrow(.),-0.25,.25),
ef = abs(as.numeric(prediccion)-observado),
ef = ifelse(ef==0,NA,ef),
prediccion = as.numeric(prediccion),
observado = observado) %>%
arrange(fecha)# %>%
res <- tt %>%
rbind(kk) %>%
as_tibble%>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia)),
ruido = runif(nrow(.),-0.25,.25),
ef = abs(as.numeric(prediccion)-observado),
ef = ifelse(ef==0,NA,ef),
prediccion = as.numeric(prediccion),
observado = observado) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente(.)) %>%
bind_rows()
res <- tt %>%
rbind(kk) %>%
as_tibble%>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia)),
ruido = runif(nrow(.),-0.25,.25),
ef = abs(as.numeric(prediccion)-observado),
ef = ifelse(ef==0,NA,ef),
prediccion = as.numeric(prediccion),
observado = observado) %>%
arrange(fecha) #%>%
View(res)
View(res)
res <- tt %>%
rbind(kk) %>%
as_tibble%>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia)),
ruido = runif(nrow(.),-0.25,.25),
ef = abs(as.numeric(prediccion)-observado),
ef = ifelse(ef==0,NA,ef),
prediccion = as.numeric(prediccion),
observado = observado) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente(.)) %>%
bind_rows() %>%
mutate(observado = sample(c(0,1),nrow(.),replace =TRUE))
res
res <- tt %>%
rbind(kk) %>%
as_tibble%>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente(.)) %>%
bind_rows() %>%
mutate(observado = sample(c(0,1),nrow(.),replace =TRUE),
ruido = runif(nrow(.),-0.25,.25),
ef = abs(as.numeric(prediccion)-observado),
ef = ifelse(ef==0,NA,ef),
prediccion = as.numeric(prediccion),
observado = observado)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble
dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente(.))
dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente(.)) %>%
bind_rows()
dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha)
dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,1,2),
mes = substr(fecha,3,4),
ano = substr(fecha,5,8),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha)
data.frame(fecha = c('2020-05-30','2020-05-10')) %>% mutate(fecha = ymd(fecha)) %>% arrange(fecha)
data.frame(fecha = c('2020-05-30','2020-05-10')) %>% mutate(fecha = ymd(fecha)) %>% arrange(as.numeric(fecha))
data.frame(fecha = c('2020-05-30','2020-05-10')) %>% mutate(fecha = ymd(fecha)) %>% arrange(-as.numeric(fecha))
dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,1,2),
mes = substr(fecha,3,4),
ano = substr(fecha,5,8),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente(.)) %>%
bind_rows() %>%
arrange(-as.numeric(fecha))%>%
head(1)
reciente2 <- function(x){
x %<>%
mutate(aux = 1:nrow(.)) %>%
filter(aux == 1) %>%
select(-aux)
}
dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,1,2),
mes = substr(fecha,3,4),
ano = substr(fecha,5,8),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente2(.)) %>%
bind_rows() %>%
arrange(-as.numeric(fecha))%>%
head(1)
runApp()
runApp()
