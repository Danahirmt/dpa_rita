map(~reciente(.)) %>%
bind_rows() %>%
arrange(-as.numeric(fecha))%>%
head(1)
reciente2 <- function(x){
x %<>%
mutate(aux = 1:nrow(.)) %>%
filter(aux == 1) %>%
select(-aux)
}
dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,1,2),
mes = substr(fecha,3,4),
ano = substr(fecha,5,8),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente2(.)) %>%
bind_rows() %>%
arrange(-as.numeric(fecha))%>%
head(1)
runApp()
runApp()
runApp()
shiny::runApp()
install.packages(bs4Dash)
install.packages("bs4Dash")
shiny::runApp()
install.packages("echarts4r")
shiny::runApp8
shiny::runApp()
library(shinyWidgets)
library(purrr)
library(magrittr)
shiny::runApp()
shiny::runApp()
install.packages(c("shinycssloaders", "RPostgres", "shinyWidgets", "DT"))
install.packages(c("shinycssloaders", "RPostgres", "shinyWidgets", "DT"))
install.packages(c("shinycssloaders", "RPostgres", "shinyWidgets", "DT"))
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble
dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,1,2),
mes = substr(fecha,3,4),
ano = substr(fecha,5,8),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente2(.))
dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,1,2),
mes = substr(fecha,3,4),
ano = substr(fecha,5,8),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha)
dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,1,2),
mes = substr(fecha,3,4),
ano = substr(fecha,5,8),
fecha = ymd(paste0(ano,'-',mes,'-',dia)))
dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>% .$fecha
ll <- dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente2(.)) %>%
bind_rows() %>%
arrange(-as.numeric(fecha))%>%
head(1) %>%
gather(var,atributo,contains('attribute_value')) %>%
select(-var) %>%
gather(var,fpr,contains('fpr_disparity')) %>%
select(-var) %>%
mutate(colores = cbb.s[1:nrow(.)])
ll
runApp()
runApp()
ll <- dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente2(.)) %>%
bind_rows() %>%
arrange(-as.numeric(fecha))%>%
head(1) %>%
gather(var,atributo,contains('attribute_value')) %>%
select(-var) %>%
gather(var,fpr,contains('fpr_disparity')) %>%
select(-var) %>%
mutate(colores = cbb.s[1:nrow(.)])
ll
runApp()
ll %>%
e_charts(atributo) %>%
e_bar(fpr, name = 'FPR Disparity') %>%
e_flip_coords() %>%
e_tooltip( formatter = e_tooltip_item_formatter(style = "decimal",
digits = 2)    )
ll
ll <- dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente2(.)) %>%
bind_rows() %>%
arrange(-as.numeric(fecha))%>%
head(1) %>%
select(contains('attribute_value'),contains('fpr_disparity')) %>%
gather(var,atributo,contains('attribute_value')) %>%
select(-var) %>%
gather(var,fpr,contains('fpr_disparity')) %>%
select(-var) %>%
mutate(colores = cbb.s[1:nrow(.)])
ll
ll <- dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente2(.)) %>%
bind_rows() %>%
arrange(-as.numeric(fecha))%>%
head(1) %>%
select(contains('attribute_value'),contains('fpr_disparity')) %>%
gather(var,atributo,contains('attribute_value')) %>%
select(-var) %>%
gather(var,fpr,contains('fpr_disparity')) %>%
select(-var) %>%
unique %>%
mutate(colores = cbb.s[1:nrow(.)])
ll
ll
ll <- dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente2(.)) %>%
bind_rows() %>%
arrange(-as.numeric(fecha))%>%
head(1) %>%
select(contains('attribute_value'),contains('fpr_disparity')) %>%
gather(var,atributo,contains('attribute_value')) %>%
select(-var) #%>%
ll
ll <- dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente2(.)) %>%
bind_rows() %>%
arrange(-as.numeric(fecha))%>%
head(1) %>%
select(contains('attribute_value'),contains('fpr_disparity')) %>%
gather(var,atributo,contains('attribute_value')) %>%
select(-var)%>%
gather(var,fpr,contains('fpr_disparity')) %>%
select(-var) #%>%
ll
ll <- dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente2(.)) %>%
bind_rows() %>%
arrange(-as.numeric(fecha))%>%
head(1) #%>%
ll
runApp()
runApp()
runApp()
ll <- dbGetQuery(con2,"select * from metadatos.bias") %>%
as_tibble %>%
mutate(dia = substr(fecha,7,8),
mes = substr(fecha,5,6),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia))) %>%
arrange(fecha) %>%
split(.$fecha) %>%
map(~reciente2(.)) %>%
bind_rows() %>%
arrange(-as.numeric(fecha))%>%
head(1)
ll %>%
select(contains('q1'))
select(contains('q2')) %>%
purrr::set_names(nm = c('atributo', 'fdr'))
mutate(colores = cbb.s[1:nrow(.)])
q3 <- ll %>%
select(contains('q3')) %>%
purrr::set_names(nm = c('atributo', 'fdr'))
mutate(colores = cbb.s[1:nrow(.)])
q4 <- ll %>%
select(contains('q4')) %>%
purrr::set_names(nm = c('atributo', 'fdr'))
mutate(colores = cbb.s[1:nrow(.)])
res <- rbind(q1,q2,q3,q4)
q2 <- ll %>%
select(contains('q2')) %>%
purrr::set_names(nm = c('atributo', 'fdr'))
q3 <- ll %>%
select(contains('q3')) %>%
purrr::set_names(nm = c('atributo', 'fdr'))
q4 <- ll %>%
select(contains('q4')) %>%
purrr::set_names(nm = c('atributo', 'fdr'))
res <- rbind(q1,q2,q3,q4)
q1 <- ll %>%
select(contains('q1')) %>%
purrr::set_names(nm = c('atributo', 'fdr'))
q2 <- ll %>%
select(contains('q2')) %>%
purrr::set_names(nm = c('atributo', 'fdr'))
q3 <- ll %>%
select(contains('q3')) %>%
purrr::set_names(nm = c('atributo', 'fdr'))
q4 <- ll %>%
select(contains('q4')) %>%
purrr::set_names(nm = c('atributo', 'fdr'))
res <- rbind(q1,q2,q3,q4)
runApp()
runApp()
runApp()
kk  res%>%
group_by(atributo)
res%>%
group_by(atributo)
e_charts(atributo) %>%
e_bar(fdr, name = 'FDR Disparity') %>%
e_flip_coords() %>%
e_tooltip( formatter = e_tooltip_item_formatter(style = "decimal",
digits = 2)    )
res%>%
group_by(atributo) %>%
e_charts(atributo) %>%
e_bar(fdr, name = 'FDR Disparity') %>%
e_flip_coords() %>%
e_tooltip( formatter = e_tooltip_item_formatter(style = "decimal",
digits = 2)    )
runApp()
dbGetQuery(con2,sprintf("select distinct distance from
predictions.train
where flight_number = '%s'",
input$vuelo)) %>%
rbind(  dbGetQuery(con2,sprintf("select distinct distance from
predictions.test
where flight_number = '%s'",
input$vuelo))) %>%
unique %>%
as_tibble %>%
mutate(label = paste(distance,'Km')) %>%
select(value = distance, label)
dbGetQuery(con2,sprintf("select distinct distance from
predictions.test
where flight_number = '%s'",
input$vuelo))
tt <- dbGetQuery(con2,sprintf("select distance,
label_value as observado,
score as prediccion,
fecha
from predictions.train
where distance = '%s'",
input$distMon)) %>%
mutate(flight_number = input$vuelo) %>%
select(flight_number, distance, observado, prediccion,
fecha)
tt
kk <-  dbGetQuery(con2,sprintf("select distance,
flight_number,
prediction as prediccion,
fecha
from predictions.test
where distance = '%s'
and flight_number = '%s'",
input$distMon,
input$vuelo)) %>%
mutate(observado = NA) %>%
select(flight_number, distance, observado, prediccion,
fecha)
kk
runApp()
runApp()
kk <-  dbGetQuery(con2,sprintf("select distance,
flight_number,
prediction as prediccion,
fecha
from predictions.test
where distance = '%s'
and flight_number = '%s'",
input$distMon,
input$vuelo)) %>%
mutate(observado = NA) %>%
select(flight_number, distance, observado, prediccion,
fecha)
kk
input$vuelo
sprintf("select distance,
flight_number,
prediction as prediccion,
fecha
from predictions.test
where distance = '%s'
and flight_number = '%s'",
input$distMon,
input$vuelo)
dbGetQuery(con2,sprintf("select distinct distance from
predictions.train
where flight_number = '%s'",
input$vuelo)) %>%
rbind(  dbGetQuery(con2,sprintf("select distinct distance from
predictions.test
where flight_number = '%s'",
input$vuelo))) %>%
unique %>%
as_tibble %>%
mutate(label = paste(distance,'Km')) %>%
select(value = distance, label)
kk <-  dbGetQuery(con2,sprintf("select distance,
flight_number,
prediction as prediccion,
fecha
from predictions.test
where distance = '%s'
and flight_number = '%s'",
'1021',# input$distMon,
input$vuelo)) %>%
mutate(observado = NA) %>%
select(flight_number, distance, observado, prediccion,
fecha)
kk
tt <- dbGetQuery(con2,sprintf("select distance,
label_value as observado,
score as prediccion,
fecha
from predictions.train
where distance = '%s'",
input$distMon)) %>%
mutate(flight_number = input$vuelo) %>%
select(flight_number, distance, observado, prediccion,
fecha)
kk %>% rbind(tt) %>% mutate(num = str_count(fecha)) %>% .$num %>% unique
kk %>% rbind(tt) %>%# mutate(num = str_count(fecha)) %>% .$num %>% unique
as_tibble%>%
mutate(dia = ifelse(str_count(fecha)==10, substr(fecha,7,8),
ifelse(str_count(fecha)==9, paste0('0',
substr(fecha,7,7)),
paste0('0',
substr(fecha,6,6)))),
mes = ifelse(str_count(fecha)==10, substr(fecha,5,6),
ifelse(str_count(fecha)==9, paste0('0',
substr(fecha,6,6)),
paste0('0',
substr(fecha,5,5)))),
ano = substr(fecha,1,4),
fecha = ymd(paste0(ano,'-',mes,'-',dia)))
kk %>% rbind(tt) %>%# mutate(num = str_count(fecha)) %>% .$num %>% unique
as_tibble%>%
mutate(dia = ifelse(str_count(fecha)==10, substr(fecha,7,8),
ifelse(str_count(fecha)==9, paste0('0',
substr(fecha,7,7)),
paste0('0',
substr(fecha,6,6)))),
mes = ifelse(str_count(fecha)==10, substr(fecha,5,6),
ifelse(str_count(fecha)==9, paste0('0',
substr(fecha,6,6)),
paste0('0',
substr(fecha,5,5)))),
ano = substr(fecha,1,4),
fecha2 = ymd(paste0(ano,'-',mes,'-',dia)))
kk <-  dbGetQuery(con2,sprintf("select distance,
flight_number,
prediction as prediccion,
fecha
from predictions.test
where distance = '%s'
and flight_number = '%s'",
input$distMon,#1021',#
input$vuelo)) %>%
mutate(observado = NA) %>%
select(flight_number, distance, observado, prediccion,
fecha)
kk
tt <- dbGetQuery(con2,sprintf("select distance,
label_value as observado,
score as prediccion,
fecha
from predictions.train
where distance = '%s'",
input$distMon)) %>%
mutate(flight_number = input$vuelo) %>%
select(flight_number, distance, observado, prediccion,
fecha)
tt
tt <- dbGetQuery(con2,sprintf("select distance,
label_value as observado,
score as prediccion,
fecha
from predictions.train
where distance = '%s'",
input$distMon)) %>%
mutate(flight_number = input$vuelo) %>%
select(flight_number, distance, observado, prediccion,
fecha)
tt
kk <-  dbGetQuery(con2,sprintf("select distance,
flight_number,
prediction as prediccion,
fecha
from predictions.test
where distance = '%s'
and flight_number = '%s'",
input$distMon,#1021',#
input$vuelo)) %>%
mutate(observado = NA) %>%
select(flight_number, distance, observado, prediccion,
fecha)
kk
kk <-  dbGetQuery(con2,sprintf("select distance,
flight_number,
prediction as prediccion,
fecha
from predictions.test
where distance = '%s'
and flight_number = '%s'",
'1021',# input$distMon,#
input$vuelo)) %>%
mutate(observado = NA) %>%
select(flight_number, distance, observado, prediccion,
fecha)
kk
runApp()
runApp()
runApp()
res%>%
group_by(atributo) %>%
e_charts(atributo) %>%
e_bar(fdr, name = 'FDR Disparity') %>%
e_flip_coords() %>%
e_tooltip( formatter = e_tooltip_item_formatter(style = "decimal",
digits = 2)    )
runApp()
runApp()
runApp()
data <- dbGetQuery(con2,"select *
from metadatos.models
order by f1 desc limit 1;") %>%
select(model_name, objetivo, hyperparams, f1, train_time, train_nrows,
test_split)
data
DT::datatable(data,
rownames = FALSE,
extensions = list(),
options = list(scrollX = TRUE,
colReorder = TRUE))
data <- dbGetQuery(con2,"select *
from metadatos.models
order by f1 desc limit 1;") %>%
select(model_name, objetivo, hyperparams, f1, train_time, train_nrows,
test_split)
DT::datatable(data,
rownames = FALSE,
extensions = list(),
options = list(scrollX = TRUE,
colReorder = TRUE))
DT::datatable(data,
rownames = FALSE,
extensions = list(),
options = list(scrollX = TRUE,
colReorder = TRUE))
runApp()
runApp()
